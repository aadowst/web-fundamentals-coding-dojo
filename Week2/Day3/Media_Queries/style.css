/* this CSS uses media queries to change the grid assignments for buttons. It might have been simpler to change the width percentage, but it works! */

*{
    margin: 0;
    padding: 0;
}

.main{
    display: grid;
    padding: 20px;
    grid-template-columns: repeat(4, 25%);
    grid-template-rows: repeat(4, 25%);
    grid-row-gap: 10px;
    grid-column-gap: 10px;

}

.btn{
    display: flex;
    justify-content: center;
}

.box{
    width:100%;
    height: 100%;
    border: 1px solid black;
    min-height: 100px;
    min-width: 100px;
    max-height: 200px;
    max-width: 300px;
    display: flex;
    align-items: center;
    justify-content: center;
}

@media only screen and (max-width: 480px){
    .box {
        background-color: red;
    }
    #btn1{
        grid-row: 1/2;
        grid-column: 1/5;
    }
    #btn2{
        grid-row: 2/3;
        grid-column: 1/5;
    }
    #btn3{
        grid-row: 3/4;
        grid-column: 1/5;
    }
    #btn4{
        grid-row: 4/5;
        grid-column: 1/5;
    }
}

@media only screen and (min-width: 481px){
    .box {
        background-color: blue;
    }
    #btn1{
        grid-row: 1/3;
        grid-column: 1/3;
    }
    #btn2{
        grid-row: 1/3;
        grid-column: 3/5;
    }
    #btn3{
        grid-row: 3/5;
        grid-column: 1/3;
    }
    #btn4{
        grid-row: 3/5;
        grid-column: 3/5;
    }
}

@media only screen and (min-width: 1024px){
    .box {
        background-color: yellow;
    }
    #btn1{
        grid-row: 1/2;
        grid-column: 1/2;
    }
    #btn2{
        grid-row: 1/2;
        grid-column: 2/3;
    }
    #btn3{
        grid-row: 1/2;
        grid-column: 3/4;
    }
    #btn4{
        grid-row: 1/2;
        grid-column: 4/5;
    }
}